@g = global i32 0, align 4
define i32 @func(i32 %t0) {
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	%l3 = alloca i32, align 4
	store i32 %t0, i32* %l1, align 4
	%t5 = load i32, i32* @g, align 4
	%t6 = load i32, i32* %l1, align 4
	%t4 = add nsw i32 %t5, %t6
	store i32 %t4, i32* @g, align 4
	%t7 = load i32, i32* @g, align 4
	call void @putint(i32 %t7)
	%t8 = load i32, i32* @g, align 4
	store i32 %t8, i32* %l2, align 4
	%t9 = load i32, i32* %l2, align 4
	ret i32 %t9
}
define i32 @main() {
	%l0 = alloca i32, align 4
	%l1 = alloca i32, align 4
	%l2 = alloca i32, align 4
	store i32 0, i32* %l0, align 4
	%t3 = call i32 (...) @getint()
	store i32 %t3, i32* %l2, align 4
	%t35 = load i32, i32* %l2, align 4
	%t4 = icmp sgt i32 %t35, 10
	%t5 = icmp ne i1 %t4, 0
	br i1 %t5, label %.L7, label %.L11
.L7:
	%t36 = load i32, i32* %l2, align 4
	%t7 = call i32 @func(i32 %t36)
	%t37 = icmp ne i32 %t7, 0
	br i1 %t37, label %.L10, label %.L11
.L10:
	store i32 1, i32* %l1, align 4
	br label %.L12
.L11:
	store i32 0, i32* %l1, align 4
	br label %.L12
.L12:
	%t38 = load i32, i32* %l1, align 4
	%t39 = icmp ne i32 %t38, 0
	br i1 %t39, label %.L14, label %.L15
.L14:
	store i32 1, i32* %l2, align 4
	br label %.L16
.L15:
	store i32 0, i32* %l2, align 4
	br label %.L16
.L16:
	%t10 = call i32 (...) @getint()
	store i32 %t10, i32* %l2, align 4
	%t40 = load i32, i32* %l2, align 4
	%t11 = icmp sgt i32 %t40, 11
	%t12 = icmp ne i1 %t11, 0
	br i1 %t12, label %.L21, label %.L25
.L21:
	%t41 = load i32, i32* %l2, align 4
	%t14 = call i32 @func(i32 %t41)
	%t42 = icmp ne i32 %t14, 0
	br i1 %t42, label %.L24, label %.L25
.L24:
	store i32 1, i32* %l1, align 4
	br label %.L26
.L25:
	store i32 0, i32* %l1, align 4
	br label %.L26
.L26:
	%t43 = load i32, i32* %l1, align 4
	%t44 = icmp ne i32 %t43, 0
	br i1 %t44, label %.L28, label %.L29
.L28:
	store i32 1, i32* %l2, align 4
	br label %.L30
.L29:
	store i32 0, i32* %l2, align 4
	br label %.L30
.L30:
	%t17 = call i32 (...) @getint()
	store i32 %t17, i32* %l2, align 4
	%t45 = load i32, i32* %l2, align 4
	%t18 = icmp sle i32 %t45, 99
	br i1 %t18, label %.L37, label %.L34
.L34:
	%t46 = load i32, i32* %l2, align 4
	%t20 = call i32 @func(i32 %t46)
	%t47 = icmp ne i32 %t20, 0
	br i1 %t47, label %.L37, label %.L38
.L37:
	store i32 1, i32* %l1, align 4
	br label %.L39
.L38:
	store i32 0, i32* %l1, align 4
	br label %.L39
.L39:
	%t48 = load i32, i32* %l1, align 4
	%t49 = icmp ne i32 %t48, 0
	br i1 %t49, label %.L41, label %.L42
.L41:
	store i32 1, i32* %l2, align 4
	br label %.L43
.L42:
	store i32 0, i32* %l2, align 4
	br label %.L43
.L43:
	%t23 = call i32 (...) @getint()
	store i32 %t23, i32* %l2, align 4
	%t50 = load i32, i32* %l2, align 4
	%t24 = icmp sle i32 %t50, 100
	br i1 %t24, label %.L50, label %.L47
.L47:
	%t51 = load i32, i32* %l2, align 4
	%t26 = call i32 @func(i32 %t51)
	%t52 = icmp ne i32 %t26, 0
	br i1 %t52, label %.L50, label %.L51
.L50:
	store i32 1, i32* %l1, align 4
	br label %.L52
.L51:
	store i32 0, i32* %l1, align 4
	br label %.L52
.L52:
	%t53 = load i32, i32* %l1, align 4
	%t54 = icmp ne i32 %t53, 0
	br i1 %t54, label %.L54, label %.L55
.L54:
	store i32 1, i32* %l2, align 4
	br label %.L56
.L55:
	store i32 0, i32* %l2, align 4
	br label %.L56
.L56:
	%t29 = call i32 @func(i32 99)
	%t30 = icmp eq i32 %t29, 0
	br i1 %t30, label %.L60, label %.L64
.L60:
	%t32 = call i32 @func(i32 100)
	%t55 = icmp ne i32 %t32, 0
	br i1 %t55, label %.L63, label %.L64
.L63:
	store i32 1, i32* %l1, align 4
	br label %.L65
.L64:
	store i32 0, i32* %l1, align 4
	br label %.L65
.L65:
	%t56 = load i32, i32* %l1, align 4
	%t57 = icmp ne i32 %t56, 0
	br i1 %t57, label %.L67, label %.L68
.L67:
	store i32 1, i32* %l2, align 4
	br label %.L69
.L68:
	store i32 0, i32* %l2, align 4
	br label %.L69
.L69:
	store i32 0, i32* %l0, align 4
	%t58 = load i32, i32* %l0, align 4
	ret i32 %t58
}
declare i32 @getint(...);
declare i32 @getch(...);
declare void @putint(i32);
declare void @putch(i32);
declare void @putstr(i8*);
declare i32 @getarray(i32*);
declare void @putarray(i32, i32*);
declare float @getfloat(...);
declare void @putfloat(float);
declare i32 @getfarray(float*);
declare void @putfarray(i32, float*);
